{
  "$schema-template": "4.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.1",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {}
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.2",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.2",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "modules": {
          "manager": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.manager.debug}",
              "createOptions": {
                "ExposedPorts": {
                  "9229/tcp": {},
                  "8888/tcp": {}
                },
                "HostConfig": {
                  "PortBindings": {
                    "9229/tcp": [
                      {
                        "HostPort": "9229"
                      }
                    ],
                    "8888/tcp": [
                      {
                        "HostPort": "8888"
                      }
                    ]
                  }
                }
              }
            }
          },
          "discovery": {
            "settings": {
              "image": "mcr.microsoft.com/iotedge/discovery:latest",
              "createOptions": {
                "Hostname": "discovery",
                "NetworkingConfig": {
                  "EndpointsConfig": {
                    "host": {}
                  }
                },
                "HostConfig": {
                  "NetworkMode": "host",
                  "CapAdd": ["NET_ADMIN"]
                }
              }
            },
            "type": "docker",
            "version": "1.0",
            "status": "running",
            "restartPolicy": "always"
          },
          "twin": {
            "settings": {
              "image": "mcr.microsoft.com/iotedge/opc-twin:latest",
              "createOptions": {}
            },
            "type": "docker",
            "version": "1.0",
            "status": "running",
            "restartPolicy": "always"
          },
          "publisher": {
            "settings": {
              "image": "mcr.microsoft.com/iotedge/opc-publisher:latest",
              "createOptions": ""
            },
            "type": "docker",
            "version": "1.0",
            "status": "running",
            "restartPolicy": "always"
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.1",
        "routes": {
          "managerToIoTHub": "FROM /messages/modules/manager/outputs/* INTO $upstream",
          "sensorTomanager": "FROM /messages/modules/SimulatedTemperatureSensor/outputs/temperatureOutput INTO BrokeredEndpoint(\"/modules/manager/inputs/input1\")"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "discovery": {
      "properties.desired": {}
    },
    "twin": {
      "properties.desired": {}
    },
    "publisher": {
      "properties.desired": {}
    }
  }
}
